{"version":3,"sources":["Header.js","firebase.js","CartItem.js","CartItems.js","CartTotal.js","Cart.js","Product.js","Home.js","App.js","reportWebVitals.js","index.js"],"names":["Header","cartItems","className","src","alt","type","to","Count","forEach","item","product","quantity","getCount","db","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","firestore","CartItem","id","options","i","Math","max","push","value","image","name","onChange","e","newQuantity","target","collection","doc","update","parseInt","onClick","delete","price","CartItems","map","CartTotal","Total","getTotal","displayType","thousandSeparator","prefix","Cart","Product","title","ratings","Array","fill","console","log","get","then","exists","data","set","Home","useState","products","setProducts","useEffect","onSnapshot","snapshot","tempProducts","docs","App","setcartItems","tempcartItems","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.42a28489.chunk.js","sourcesContent":["import React from 'react';\r\nimport \"./Header.css\";\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport ShoppingCartIcon from '@material-ui/icons/ShoppingCart';\r\nimport LocationOnIcon from '@material-ui/icons/LocationOn';\r\nimport { Link } from 'react-router-dom';\r\n\r\n//we can use the css here to design the page but instead of css we are using styled component package\r\n\r\nfunction Header({cartItems}) {\r\n\r\n    const getCount = () =>{\r\n        let Count=0;\r\n            //Looping each cartItems\r\n        \r\n        cartItems.forEach((item)=> {\r\n            Count=Count+item.product.quantity;\r\n        });\r\n\r\n        return Count;\r\n        \r\n    }\r\n    //console.log(getCount());\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"Header\">\r\n\r\n                <div className=\"Header__Logo\">\r\n                    \r\n\r\n                        <img src={\"https://i.imgur.com/7I9Was5.jpg\"} alt=\"\" />  \r\n                    \r\n\r\n                </div>\r\n\r\n                <div className=\"HeaderOptionAddress\">\r\n                    <LocationOnIcon />\r\n                    <div className=\"HeaderOption\">\r\n                        <span className=\"OptionLineOne\">Hello</span><br />\r\n                        <span className=\"OptionLineTwo\">Select your Address</span>\r\n                    </div>\r\n                            \r\n                </div>\r\n\r\n                <div className=\"HeaderSearch\">\r\n                    <input type=\"text\" />\r\n                    <div className=\"HeaderSearchIconContainer\">\r\n                        <SearchIcon />\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"HeaderNavItems\">\r\n                    <div className=\"HeaderOption\">\r\n                        <div className=\"OptionLineOne\">Hello,Sign in</div>\r\n                        <div className=\"OptionLineTwo\">Accounts & Lists</div>\r\n                    </div>\r\n                    <div className=\"HeaderOption\">\r\n                        <div className=\"OptionLineOne\">Returns</div>\r\n                        <div className=\"OptionLineTwo\">& Orders</div>\r\n                    </div>\r\n\r\n                    \r\n\r\n                        <div className=\"HeaderOptionCart\">\r\n                            <Link to=\"/cart\">\r\n\r\n                                <ShoppingCartIcon />\r\n                                <div className=\"CartCount\">{getCount()}</div>\r\n                            </Link>\r\n                        </div>\r\n                    \r\n                </div>\r\n\r\n\r\n\r\n        </div>\r\n       \r\n    )\r\n}\r\n\r\nexport default Header;\r\n","// For Firebase JS SDK v7.20.0 and later, measurementId is optional\r\nimport firebase from 'firebase';\r\n\r\nconst firebaseApp = firebase.initializeApp ({\r\n    apiKey: \"AIzaSyD89T02Yn9-ZrDCE3CopfvdiWHBeGRcgLc\",\r\n    authDomain: \"clone-94437.firebaseapp.com\",\r\n    projectId: \"clone-94437\",\r\n    storageBucket: \"clone-94437.appspot.com\",\r\n    messagingSenderId: \"1074750725049\",\r\n    appId: \"1:1074750725049:web:a12d3a2cb1bab3f45b7468\",\r\n    measurementId: \"G-63QDFSCTDW\"\r\n  });\r\n\r\nconst db = firebase.firestore();\r\n\r\nexport { db }","import React from 'react'\r\nimport './CartItem.css'\r\nimport { db } from './firebase'\r\n\r\nfunction CartItem({id, item}) {\r\n\r\n    const options =[];\r\n\r\n    for (let i=1;i<Math.max(item.quantity +1,20);i++){\r\n        options.push(<option value={i}>Qty:{i}</option>)\r\n    }\r\n\r\n    const getChangedQuantity = (newQuantity) =>{\r\n            db.collection('cartItems').doc(id).update({\r\n                    quantity:parseInt(newQuantity)\r\n            })\r\n\r\n            \r\n    }\r\n\r\n    const DeleteItem = () => {\r\n       \r\n        db.collection('cartItems').doc(id).delete();\r\n    }\r\n\r\n    return (\r\n        <div className=\"CartItem__Container\">\r\n            <div className=\"Cart__Item\">\r\n\r\n                <div className=\"Image__Container\">\r\n                    <img src={item.image} />\r\n                </div>\r\n                <div className=\"ItemInfo\">\r\n                    <div className=\"ItemTopInfo\">\r\n                        <h2> {item.name} </h2>\r\n                    </div>\r\n                    <div className=\"ItemBottomInfo\">\r\n                        <div className=\"ItemBottomQuantityInfo\">\r\n                            <select  \r\n                                 value={item.quantity}\r\n                                 onChange={(e)=>getChangedQuantity(e.target.value)}\r\n                            >\r\n                               {options}\r\n                            </select>\r\n                              \r\n                        </div>\r\n                        <div className=\"ItemBottomDeleteInfo\">\r\n                                <buttonDelete onClick={DeleteItem}>Delete</buttonDelete>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"Pricing\">\r\n                    ${item.price}\r\n                </div> \r\n            </div>\r\n             \r\n        \r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CartItem\r\n","import React from 'react';\r\nimport './CartItems.css'\r\nimport CartItem from './CartItem'\r\n\r\nfunction CartItems({cartItems}) {\r\n    return (\r\n        <div className=\"CartItems__Container\">\r\n            <div className=\"Title\">\r\n                <h1>Shopping Cart</h1>\r\n\r\n            </div>\r\n            \r\n            <hr />\r\n\r\n            <div className=\"ItemsContainer\">\r\n                {\r\n                   cartItems.map((item)=>(\r\n                       <CartItem \r\n                            id={item.id}\r\n                            item={item.product}                      \r\n                       />\r\n                   ))\r\n                }\r\n               \r\n            </div>\r\n            \r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CartItems;\r\n","import React from 'react';\r\nimport './CartTotal.css';\r\nimport NumberFormat from 'react-number-format';\r\n\r\nfunction CartTotal({cartItems}) {\r\n\r\n        const getCount = () =>{\r\n            let Count=0;\r\n                //Looping each cartItems\r\n            \r\n            cartItems.forEach((item)=> {\r\n                Count=Count+item.product.quantity;\r\n            });\r\n\r\n            return Count;\r\n            \r\n        }\r\n\r\n        const getTotal = () =>{\r\n            let Total=0;\r\n            cartItems.forEach((item)=>{\r\n                Total=Total+(item.product.price) * (item.product.quantity);\r\n            })\r\n            return Total;\r\n        }\r\n\r\n    return (\r\n        <div className=\"CartTotal__Container\">\r\n            <h2>SubTotal ({getCount()} items): <NumberFormat value={getTotal()} displayType={'text'} thousandSeparator={true} prefix={'$'} /></h2>\r\n            <div className=\"Button\">\r\n                <button>Proceed to Checkout</button>\r\n\r\n            </div>\r\n           \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CartTotal;\r\n","import React from 'react';\r\nimport './Cart.css';\r\nimport CartItems from './CartItems';\r\nimport CartTotal from './CartTotal';\r\n\r\nfunction Cart({cartItems}) {\r\n    return (\r\n        <div className=\"Container\">\r\n            \r\n            <CartItems cartItems={cartItems} />\r\n            <CartTotal cartItems={cartItems} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Cart;\r\n\r\n","import React from 'react';\r\nimport './Product.css';\r\nimport { db } from './firebase';\r\n\r\n\r\n//props is nothing;\r\n//It is just an Object which links the component with the database simply by passing itself to \r\n//the component as a parameter...+\r\nfunction Product({ title, price, ratings, image, id}) {\r\n\r\n    const addToCart = () =>{\r\n        console.log(id);\r\n\r\n        //Here we have created a constant variable cartItem which will check whether the product exists \r\n        //in our database or not if the Add to Cart Button is clicked\r\n\r\n        const CartItem = db.collection('cartItems').doc(id);\r\n        \r\n        //getting the product\r\n        CartItem.get()\r\n        //if the product exist then the following code is run\r\n        .then((doc)=>{\r\n            console.log(doc);\r\n            //if exists \r\n            if(doc.exists){\r\n                //update the cartItem \r\n                CartItem.update({\r\n                    //update the quantity by 1\r\n                    quantity: doc.data().quantity + 1\r\n                })\r\n            }\r\n            else{\r\n                db.collection('cartItems').doc(id).set({\r\n                    name:title,\r\n                    price:price,\r\n                    image:image,\r\n                    quantity:1\r\n                })\r\n            }\r\n        }) \r\n    }\r\n   \r\n\r\n    return (\r\n        <div className=\"container\">\r\n           <div className=\"Title\">\r\n               {title}\r\n           </div>\r\n           <div className=\"Price\">\r\n                ${price}\r\n           </div>\r\n           <div className=\"Ratings\">\r\n              {\r\n                  Array(ratings)\r\n                  .fill()\r\n                  .map(ratings => <p>🌟</p>)\r\n              }\r\n\r\n           </div>\r\n           \r\n            <img src={image}  />\r\n         \r\n            <div className=\"Action\">\r\n                <div className=\"button\">\r\n                    <button onClick={addToCart}>Add to Cart</button>\r\n                </div>\r\n            </div>\r\n           \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Product\r\n","import React,{useState, useEffect} from 'react';\r\nimport './Home.css';\r\nimport Product from './Product';\r\nimport { db } from './firebase';\r\n\r\nfunction Home() {\r\n     const [products, setProducts] = useState([]);\r\n    \r\n    //products as a state which is used in the useState is basically the container ofg all products in the database\r\n    //setProducts is basically the state which is responsible for saving the changes that occurs in the database\r\n    \r\n    //pulling out information from the database \r\n        const getProducts = () => {\r\n                db.collection('products').onSnapshot((snapshot)=>{\r\n                        let tempProducts=[]\r\n\r\n                        //passing the value of snapshot in tempProducts and mapping each property \r\n                        //of the products and pulling each and every information from the database\r\n                        //into it\r\n                        tempProducts = snapshot.docs.map((doc) => (\r\n                            {\r\n                                //it will give the id of the product\r\n                                id:doc.id,\r\n                                //it will provide the data/details/information about the product\r\n                                product:doc.data()\r\n                            }\r\n                        ));\r\n                       \r\n                        //passing the value of tempProducts to setProduts state\r\n                        //This is done bcz the setProducts is responsible for saving the changes\r\n                        //that occurs in the database not the tempProducts\r\n                        setProducts(tempProducts);\r\n                })\r\n        }\r\n\r\n        //useEffect will run our application on ther network just for one time\r\n        //that is when our application gets render over the network\r\n        useEffect(() => {\r\n            //calling the function\r\n            getProducts();\r\n        }, [])\r\n\r\n       \r\n        \r\n        //after doing this react will reload the pages instantly for infinite time \r\n        //To avoid this we should have to call the function inside the useEffect state..\r\n        console.log(products);\r\n        \r\n    \r\n    return (\r\n        <div className=\"Container\">\r\n            <div className=\"Banner\">    \r\n                <div className=\"Content\">\r\n                        {\r\n                            products.map((data)=>(\r\n                                <Product \r\n                                    title={data.product.name}\r\n                                    price={data.product.price}\r\n                                    ratings={data.product.ratings}\r\n                                    image={data.product.image}\r\n                                    id={data.id}\r\n                                />\r\n                            ))\r\n                        }\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home\r\n","import React,{useState, useEffect} from 'react';\nimport './App.css';\nimport Header from './Header';\nimport Cart from './Cart';\nimport Home from './Home';\nimport {BrowserRouter as Router, Switch, Route, Link } from 'react-router-dom';\nimport {db} from './firebase';\n\nfunction App() {\n\n  const [ cartItems, setcartItems] = useState([]);\n\n  //CartItems as a state which is used in the useState is basically the container of all CartItems in the database\n  //setCartItems is basically the state which is responsible for saving the changes that occurs in the database\n    \n  //pulling out information from the database  using the function\n\n  const getcartItems = () =>{\n      db.collection('cartItems').onSnapshot((snapshot) =>{\n          let tempcartItems=[];\n\n          tempcartItems = snapshot.docs.map((doc)=>(\n              {\n                id:doc.id,\n                product:doc.data()\n              }\n          ));\n          \n          setcartItems(tempcartItems);\n      });\n  }\n\n  //We are using the useEffect State so that our state doesnot reload each time\n  useEffect(() => {\n    console.log(\"Hey Cart Items\");\n    getcartItems();\n  }, [])\n\n  console.log(cartItems);\n\n  return (\n    \n    <Router>\n       \n      <div className=\"app\">\n        <Header cartItems={cartItems} />\n            <Switch>\n                <Route path=\"/cart\">\n                    <Cart  cartItems={cartItems} />\n                </Route>\n                <Route path=\"/\">\n                    <Home />\n                </Route>\n            </Switch>\n\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  \n  <React.StrictMode>\n      <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}